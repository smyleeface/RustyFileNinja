name: Build, Test, Draft Release
run-name: ${{ github.actor }} is building RustyFileNinja

on: [push]

#on:
#  push:
#    branches:
#      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      ninja_version: ''
      release_id: ''
      release_filename: ''
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Test FileNinja
        run: |
          cargo test
      - name: Build FileNinja
        run: |
          cargo build --release
      - name: Verify Build
        run: |
          if ! ./target/release/fini --help; then
            exit 1
          fi
      - name: Package FileNinja
        run: |
          ninja_version="0.0.1"
          runner_os=$(echo "${{runner.os}}" | awk '{print tolower($0)}')
          runner_arch=$(echo "${{runner.arch}}" | awk '{print tolower($0)}')
          release_filename="rusty_file_ninja_${ninja_version}_${runner_os}_${runner_arch}.tar.gz"
          tar -czf $release_filename dist/fini
          printf "FileNinja package: %s\n" $release_filename
          echo "release_filename=$release_filename" >> $GITHUB_ENV
      - name: Create Release
        run: |
          release_id=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/releases \
            -f "tag_name=v${ninja_version}" \
            -f "target_commitish=main" \
            -f "name=v${ninja_version}" \
            -f "body=." \
            -F "draft=true" \
            -F "prerelease=false" \
            -F "generate_release_notes=true" | jq .id)
          echo "release_id=$release_id" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{secrets.MYPAT}}
      - name: Upload FileNinja package
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${MYPAT}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@${release_filename}" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${release_id}/assets?name=${release_filename}"
        env:
          MYPAT: ${{secrets.MYPAT}}
